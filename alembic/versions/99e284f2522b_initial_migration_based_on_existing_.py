"""Initial migration based on existing schema

Revision ID: 99e284f2522b
Revises:
Create Date: 2025-08-27 22:06:12.411513

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "99e284f2522b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=True),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column("bio", sa.Text(), nullable=True),
        sa.Column("avatar_url", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("image_url", sa.String(length=500), nullable=True),
        sa.Column("is_available", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_id"), "items", ["id"], unique=False)
    op.create_index(op.f("ix_items_title"), "items", ["title"], unique=False)
    op.drop_table("fact_issue")
    op.drop_table("sync_state")
    op.drop_table("fact_issue_status_event")
    op.drop_table("dim_user")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dim_user",
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("display", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("user_id", name=op.f("dim_user_pkey")),
    )
    op.create_table(
        "fact_issue_status_event",
        sa.Column("issue_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "changed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("status_key", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("status_display", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "issue_id", "changed_at", name=op.f("fact_issue_status_event_pkey")
        ),
    )
    op.create_table(
        "sync_state",
        sa.Column("key", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("value", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("key", name=op.f("sync_state_pkey")),
    )
    op.create_table(
        "fact_issue",
        sa.Column("issue_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("summary", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("author_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("assignee_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("status_key", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("status_display", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("team", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("prodteam", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("profit_forecast", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("business_client", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "fetched_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("issue_id", name=op.f("fact_issue_pkey")),
    )
    op.drop_index(op.f("ix_items_title"), table_name="items")
    op.drop_index(op.f("ix_items_id"), table_name="items")
    op.drop_table("items")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
