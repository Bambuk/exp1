#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

from radiator.core.database import SessionLocal
from radiator.models.tracker import TrackerTask, TrackerTaskHistory, TrackerSyncLog

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        db = SessionLocal()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏
        print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É tracker_tasks...")
        tasks = db.query(TrackerTask).limit(5).all()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á –≤ –ë–î: {len(tasks)}")
        
        if tasks:
            print("–ü—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞—á:")
            for task in tasks[:3]:
                print(f"  - {task.key}: {task.summary[:50] if task.summary else 'N/A'}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É tracker_task_history...")
        history = db.query(TrackerTaskHistory).limit(5).all()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏: {len(history)}")
        
        if history:
            print("–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏:")
            for entry in history[:3]:
                print(f"  - Task ID: {entry.task_id}, Status: {entry.status}, Date: {entry.start_date}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        print("\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
        sync_logs = db.query(TrackerSyncLog).limit(5).all()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ª–æ–≥–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {len(sync_logs)}")
        
        if sync_logs:
            print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:")
            for log in sync_logs[-3:]:
                print(f"  - {log.sync_started_at}: {log.status} - {log.tasks_processed} –∑–∞–¥–∞—á")
        
        db.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}")
        return False

if __name__ == "__main__":
    success = check_database()
    sys.exit(0 if success else 1)
