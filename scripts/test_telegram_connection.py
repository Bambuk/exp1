#!/usr/bin/env python3
"""Test script for Telegram bot connection."""

import asyncio
import os
import sys
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from dotenv import load_dotenv
from telegram import Bot
from telegram.error import TelegramError

# Load environment variables
load_dotenv()

async def test_telegram_connection():
    """Test Telegram bot connection and get chat info."""
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    user_id = os.getenv("TELEGRAM_USER_ID")
    
    if not bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return False
    
    if not user_id:
        print("‚ùå TELEGRAM_USER_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return False
    
    print(f"ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram –±–æ—Ç—É...")
    print(f"üì± User ID: {user_id}")
    
    try:
        bot = Bot(token=bot_token)
        
        # Get bot info
        me = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{me.username} ({me.first_name})")
        
        # Try to get chat info
        try:
            chat = await bot.get_chat(chat_id=user_id)
            print(f"‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω: {chat.type} - {chat.title or chat.first_name or chat.username or 'Unknown'}")
            
            # Try to send test message
            print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            message = await bot.send_message(
                chat_id=user_id,
                text="üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤!\n\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
            )
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! Message ID: {message.message_id}")
            
            return True
            
        except TelegramError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å —á–∞—Ç–æ–º: {e}")
            
            if "Chat not found" in str(e):
                print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
                print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –±–æ—Ç—É @{} –≤ Telegram".format(me.username))
                print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /start")
                print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ User ID —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Chat ID –≤–º–µ—Å—Ç–æ User ID")
            
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

async def get_updates():
    """Get recent updates to see available chats."""
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    
    if not bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    
    try:
        bot = Bot(token=bot_token)
        updates = await bot.get_updates()
        
        if not updates:
            print("üì≠ –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            return
        
        print(f"üì® –ù–∞–π–¥–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:")
        for i, update in enumerate(updates[-5:], 1):  # Show last 5 updates
            if update.message:
                chat = update.message.chat
                print(f"{i}. Chat ID: {chat.id}, Type: {chat.type}, Title: {chat.title or chat.first_name or chat.username or 'Unknown'}")
            elif update.my_chat_member:
                chat = update.my_chat_member.chat
                print(f"{i}. Chat ID: {chat.id}, Type: {chat.type}, Title: {chat.title or chat.first_name or chat.username or 'Unknown'}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")

def main():
    """Main function."""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤")
    print("=" * 50)
    
    # Test connection
    success = asyncio.run(test_telegram_connection())
    
    if not success:
        print("\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö...")
        asyncio.run(get_updates())
    
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ Telegram (–∫–æ–º–∞–Ω–¥–∞ /start)")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ User ID –≤ .env")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞: python scripts/test_telegram_connection.py")

if __name__ == "__main__":
    main()
