#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ –ø–æ ID —á–µ—Ä–µ–∑ Tracker API
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv
import requests

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

def test_single_task():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ –ø–æ ID."""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ –ø–æ ID...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv('TRACKER_API_TOKEN')
    org_id = os.getenv('TRACKER_ORG_ID')
    
    print(f"Token: {token[:20]}..." if token else "Token: –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print(f"Org ID: {org_id}")
    
    if not token or not org_id:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return False
    
    # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –∏–∑ —Ç–æ–∫–µ–Ω–∞ –∏ org_id –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    token = token.strip('"')
    org_id = org_id.strip('"')
    
    print(f"Token (cleaned): {token[:20]}...")
    print(f"Org ID (cleaned): {org_id}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API
    headers = {
        'Authorization': f'OAuth {token}',
        'X-Org-ID': org_id,
        'Content-Type': 'application/json'
    }
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    org_url = f"https://api.tracker.yandex.net/v2/organizations/{org_id}"
    print(f"üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {org_url}")
    
    try:
        response = requests.get(org_url, headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            org_data = response.json()
            print(f"‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞: {org_data.get('name', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
    
    # –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –∑–∞–¥–∞—á—É
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫
    search_url = "https://api.tracker.yandex.net/v2/issues"
    params = {
        'query': '',
        'limit': 1
    }
    
    print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∑–∞–¥–∞—á: {search_url}")
    
    try:
        response = requests.get(search_url, headers=headers, params=params)
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            tasks_data = response.json()
            print(f"‚úÖ –ó–∞–¥–∞—á–∏ –ø–æ–ª—É—á–µ–Ω—ã: {len(tasks_data)}")
            if tasks_data:
                print(f"–ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞: {tasks_data[0].get('key', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–¥–∞—á: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
    
    return True

if __name__ == "__main__":
    test_single_task()
