#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Tracker API —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

from radiator.services.tracker_service import tracker_service

def test_api_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ Tracker API."""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ Tracker API...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv('TRACKER_API_TOKEN')
    org_id = os.getenv('TRACKER_ORG_ID')
    
    print(f"Token: {token[:20]}..." if token else "Token: –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print(f"Org ID: {org_id}")
    
    if not token or not org_id:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return False
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        print("üì° –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –∑–∞–¥–∞—á...")
        tasks = tracker_service.search_tasks("", limit=5)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {len(tasks)}")
        
        if tasks:
            print(f"–ü—Ä–∏–º–µ—Ä—ã ID –∑–∞–¥–∞—á: {tasks[:3]}")
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏
            if tasks:
                print(f"üìã –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏ {tasks[0]}...")
                task_data = tracker_service.get_task(tasks[0])
                if task_data:
                    print(f"‚úÖ –ó–∞–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω–∞: {task_data.get('key', 'N/A')} - {task_data.get('summary', 'N/A')[:50]}...")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {e}")
        return False

if __name__ == "__main__":
    success = test_api_access()
    sys.exit(0 if success else 1)
