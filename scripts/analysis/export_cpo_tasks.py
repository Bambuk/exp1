#!/usr/bin/env python3
"""
–≠–∫—Å–ø–æ—Ä—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—á CPO –≤ —Ñ–∞–π–ª –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

from radiator.core.database import SessionLocal
# CRUD operations removed - using direct SQLAlchemy queries

def export_cpo_tasks():
    """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ CPO –≤ —Ñ–∞–π–ª."""
    print("üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ CPO...")
    
    try:
        db = SessionLocal()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ CPO
        cpo_tasks = db.query(tracker_task.model).filter(
            tracker_task.model.key.like('CPO-%')
        ).all()
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á CPO: {len(cpo_tasks)}")
        
        if not cpo_tasks:
            print("‚ùå –ó–∞–¥–∞—á–∏ CPO –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á
        output_file = "data/output/cpo_tasks_list.txt"
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(f"# –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á CPO –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏\n")
            f.write(f"# –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {len(cpo_tasks)}\n")
            f.write(f"# –î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {Path(__file__).stat().st_mtime}\n\n")
            
            for task in cpo_tasks:
                f.write(f"{task.tracker_id}\n")
        
        print(f"‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_file}")
        print(f"üìã –ü–µ—Ä–≤—ã–µ 5 –∑–∞–¥–∞—á:")
        
        for i, task in enumerate(cpo_tasks[:5]):
            print(f"  {i+1}. {task.key}: {task.summary[:50] if task.summary else 'N/A'}...")
        
        db.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")
        return False

if __name__ == "__main__":
    success = export_cpo_tasks()
    sys.exit(0 if success else 1)
