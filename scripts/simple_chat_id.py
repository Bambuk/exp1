#!/usr/bin/env python3
"""Simple script to get Chat ID from Telegram bot."""

import asyncio
import os
import sys
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from dotenv import load_dotenv
from telegram import Bot

# Load environment variables
load_dotenv()

async def get_chat_id():
    """Get chat ID by sending a message and checking updates."""
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    
    try:
        bot = Bot(token=bot_token)
        
        # Get bot info
        me = await bot.get_me()
        print(f"ü§ñ –ë–æ—Ç: @{me.username} ({me.first_name})")
        
        print("\nüì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
        print("1. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @{} –≤ Telegram".format(me.username))
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–º—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ø—Ä–∏–≤–µ—Ç')")
        print("3. –ù–∞–∂–º–∏—Ç–µ Enter –∑–¥–µ—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        
        input()
        
        # Get updates
        print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        updates = await bot.get_updates()
        
        if not updates:
            print("üì≠ –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        
        print(f"üì® –ù–∞–π–¥–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:")
        
        for i, update in enumerate(updates[-3:], 1):  # Show last 3 updates
            if update.message:
                chat = update.message.chat
                user = update.message.from_user
                print(f"\n{i}. –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
                print(f"   üë§ User: {user.first_name} (@{user.username or '–±–µ–∑ username'})")
                print(f"   üÜî User ID: {user.id}")
                print(f"   üí¨ Chat ID: {chat.id}")
                print(f"   üìù –¢–∏–ø —á–∞—Ç–∞: {chat.type}")
                print(f"   üìÖ –í—Ä–µ–º—è: {update.message.date}")
                print(f"   üí≠ –¢–µ–∫—Å—Ç: {update.message.text[:50]}...")
                
                # Suggest the correct ID to use
                if chat.type == "private":
                    print(f"   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Chat ID: {chat.id}")
                else:
                    print(f"   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Chat ID: {chat.id}")
        
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
        print(f"   –ó–∞–º–µ–Ω–∏—Ç–µ TELEGRAM_USER_ID –≤ .env –Ω–∞: {updates[-1].message.chat.id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """Main function."""
    print("üîß –ü–æ–ª—É—á–µ–Ω–∏–µ Chat ID –æ—Ç Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    try:
        asyncio.run(get_chat_id())
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
